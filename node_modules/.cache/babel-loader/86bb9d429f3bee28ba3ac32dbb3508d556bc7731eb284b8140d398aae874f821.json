{"ast":null,"code":"var _jsxFileName = \"/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/SliderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderPage = () => {\n  _s();\n  const navigate = useNavigate();\n  const [valence, setValence] = useState(4); // Initial value for valence slider\n  const [arousal, setArousal] = useState(5); // Initial value for arousal slider\n  const [clickCount, setClickCount] = useState(() => {\n    const storedClickCount = localStorage.getItem('clickCount');\n    return storedClickCount ? parseInt(storedClickCount, 10) : 0;\n  }); // Counter for button clicks\n  const [valenceModified, setValenceModified] = useState(true); // Track if valence slider is modified\n  const [arousalModified, setArousalModified] = useState(true); // Track if arousal slider is modified\n\n  // Handler for valence slider change\n  const handleValenceChange = e => {\n    setValence(Number(e.target.value));\n    setValenceModified(true); // Set valenceModified to true when valence slider is modified\n  };\n\n  // Handler for arousal slider change\n  const handleArousalChange = e => {\n    setArousal(Number(e.target.value));\n    setArousalModified(true); // Set arousalModified to true when arousal slider is modified\n  };\n\n  // Handler for next button click\n  const handleNextButtonClick = () => {\n    // Check if both valence and arousal sliders are modified\n    if (valenceModified && arousalModified) {\n      // Increment click count\n      const updatedClickCount = clickCount + 1;\n      setClickCount(updatedClickCount);\n\n      // Save click count to local storage\n      localStorage.setItem('clickCount', updatedClickCount.toString());\n      if (updatedClickCount >= 10) {\n        // Redirect to thank you page if click count exceeds 10\n        navigate('/thankyou');\n      } else {\n        // Redirect back to the timer page to restart the process\n        navigate('/experiment');\n      }\n    } else {\n      // Alert user if sliders are not both modified\n      alert('Please modify both sliders before proceeding.');\n    }\n  };\n\n  // Handler for reset button click\n  const handleResetButtonClick = () => {\n    // Clear click count from local storage\n    localStorage.removeItem('clickCount');\n    // Reset click count in the state\n    setClickCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Click Count: \", clickCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"valenceSlider\",\n      children: \"Valence:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      id: \"valenceSlider\",\n      name: \"valenceSlider\",\n      min: \"1\",\n      max: \"10\",\n      value: valence,\n      onChange: handleValenceChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: valence\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"arousalSlider\",\n      children: \"Arousal:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      id: \"arousalSlider\",\n      name: \"arousalSlider\",\n      min: \"1\",\n      max: \"10\",\n      value: arousal,\n      onChange: handleArousalChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: arousal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"App-button\",\n      onClick: handleNextButtonClick,\n      disabled: !valenceModified || !arousalModified,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"App-button\",\n      onClick: handleResetButtonClick,\n      children: \"Reset Click Count\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderPage, \"F7NQLYnj/RoXkeUSXxPniRo3wZk=\", false, function () {\n  return [useNavigate];\n});\n_c = SliderPage;\nexport default SliderPage;\nvar _c;\n$RefreshReg$(_c, \"SliderPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","SliderPage","_s","navigate","valence","setValence","arousal","setArousal","clickCount","setClickCount","storedClickCount","localStorage","getItem","parseInt","valenceModified","setValenceModified","arousalModified","setArousalModified","handleValenceChange","e","Number","target","value","handleArousalChange","handleNextButtonClick","updatedClickCount","setItem","toString","alert","handleResetButtonClick","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","name","min","max","onChange","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/SliderPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\n\nconst SliderPage = () => {\n  const navigate = useNavigate();\n  const [valence, setValence] = useState(4); // Initial value for valence slider\n  const [arousal, setArousal] = useState(5); // Initial value for arousal slider\n  const [clickCount, setClickCount] = useState(() => {\n    const storedClickCount = localStorage.getItem('clickCount');\n    return storedClickCount ? parseInt(storedClickCount, 10) : 0;\n  }); // Counter for button clicks\n  const [valenceModified, setValenceModified] = useState(true); // Track if valence slider is modified\n  const [arousalModified, setArousalModified] = useState(true); // Track if arousal slider is modified\n\n  // Handler for valence slider change\n  const handleValenceChange = (e) => {\n    setValence(Number(e.target.value));\n    setValenceModified(true); // Set valenceModified to true when valence slider is modified\n  };\n\n  // Handler for arousal slider change\n  const handleArousalChange = (e) => {\n    setArousal(Number(e.target.value));\n    setArousalModified(true); // Set arousalModified to true when arousal slider is modified\n  };\n\n  // Handler for next button click\n  const handleNextButtonClick = () => {\n    // Check if both valence and arousal sliders are modified\n    if (valenceModified && arousalModified) {\n      // Increment click count\n      const updatedClickCount = clickCount + 1;\n      setClickCount(updatedClickCount);\n\n      // Save click count to local storage\n      localStorage.setItem('clickCount', updatedClickCount.toString());\n\n      if (updatedClickCount >= 10) {\n        // Redirect to thank you page if click count exceeds 10\n        navigate('/thankyou');\n      } else {\n        // Redirect back to the timer page to restart the process\n        navigate('/experiment');\n      }\n    } else {\n      // Alert user if sliders are not both modified\n      alert('Please modify both sliders before proceeding.');\n    }\n  };\n\n  // Handler for reset button click\n  const handleResetButtonClick = () => {\n    // Clear click count from local storage\n    localStorage.removeItem('clickCount');\n    // Reset click count in the state\n    setClickCount(0);\n  };\n\n  return (\n    <div>\n      {/* Display click count */}\n      <p>Click Count: {clickCount}</p>\n\n      {/* Rest of your JSX code */}\n      {/* Valence slider */}\n      <label htmlFor=\"valenceSlider\">Valence:</label>\n      <input\n        type=\"range\"\n        id=\"valenceSlider\"\n        name=\"valenceSlider\"\n        min=\"1\"\n        max=\"10\"\n        value={valence}\n        onChange={handleValenceChange}\n      />\n      <span>{valence}</span>\n\n      {/* Arousal slider */}\n      <label htmlFor=\"arousalSlider\">Arousal:</label>\n      <input\n        type=\"range\"\n        id=\"arousalSlider\"\n        name=\"arousalSlider\"\n        min=\"1\"\n        max=\"10\"\n        value={arousal}\n        onChange={handleArousalChange}\n      />\n      <span>{arousal}</span>\n\n      {/* Next button */}\n      <button className=\"App-button\" onClick={handleNextButtonClick} disabled={!valenceModified || !arousalModified}>\n        Next\n      </button>\n\n      {/* Reset button */}\n      <button className=\"App-button\" onClick={handleResetButtonClick}>\n        Reset Click Count\n      </button>\n    </div>\n  );\n};\n\nexport default SliderPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}