{"ast":null,"code":"var _jsxFileName = \"/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/Experiment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport mySound from './audios/89.mp3';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experiment = () => {\n  _s();\n  const [timer, setTimer] = useState(3); // Initial timer value in seconds\n  const navigate = useNavigate();\n  const [playSound, {\n    stop\n  }] = useSound(mySound);\n  const audioDuration = 10000; // Audio duration in milliseconds\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer(prevTimer => prevTimer > 0 ? prevTimer - 1 : 0);\n    }, 1000);\n    return () => clearInterval(countdown); // Clean up interval on component unmount\n  }, []);\n  const handleStartButtonClick = () => {\n    if (timer !== 0) return; // Debounce the start button\n\n    // Play audio file\n    playSound();\n\n    // Stop audio after audioDuration milliseconds\n    setTimeout(() => {\n      stop();\n    }, audioDuration);\n\n    // Redirect to sliders page after audio finishes\n    setTimeout(() => {\n      navigate('/sliders');\n    }, audioDuration);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '45px'\n      },\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"App-button\",\n        onClick: handleStartButtonClick,\n        disabled: timer !== 0,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Experiment, \"pRnaGm17eU2fJhv725e/ulYnpGs=\", false, function () {\n  return [useNavigate, useSound];\n});\n_c = Experiment;\nexport default Experiment;\nvar _c;\n$RefreshReg$(_c, \"Experiment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSound","mySound","jsxDEV","_jsxDEV","Experiment","_s","timer","setTimer","navigate","playSound","stop","audioDuration","countdown","setInterval","prevTimer","clearInterval","handleStartButtonClick","setTimeout","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/Experiment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport useSound from 'use-sound';\nimport mySound from './audios/89.mp3';\nimport './App.css';\n\nconst Experiment = () => {\n  const [timer, setTimer] = useState(3); // Initial timer value in seconds\n  const navigate = useNavigate();\n  const [playSound, { stop }] = useSound(mySound);\n\n  const audioDuration = 10000; // Audio duration in milliseconds\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      setTimer((prevTimer) => (prevTimer > 0 ? prevTimer - 1 : 0));\n    }, 1000);\n\n    return () => clearInterval(countdown); // Clean up interval on component unmount\n  }, []);\n\n  const handleStartButtonClick = () => {\n    if (timer !== 0) return; // Debounce the start button\n\n    // Play audio file\n    playSound();\n\n    // Stop audio after audioDuration milliseconds\n    setTimeout(() => {\n      stop();\n    }, audioDuration);\n\n    // Redirect to sliders page after audio finishes\n    setTimeout(() => {\n      navigate('/sliders');\n    }, audioDuration);\n  };\n\n  return (\n    <div>\n      <p style={{ fontSize: '45px' }}>{timer}</p>\n      <div>\n        <button className=\"App-button\" onClick={handleStartButtonClick} disabled={timer !== 0}>\n          Start\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Experiment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,SAAS,EAAE;IAAEC;EAAK,CAAC,CAAC,GAAGV,QAAQ,CAACC,OAAO,CAAC;EAE/C,MAAMU,aAAa,GAAG,KAAK,CAAC,CAAC;;EAE7Bb,SAAS,CAAC,MAAM;IACd,MAAMc,SAAS,GAAGC,WAAW,CAAC,MAAM;MAClCN,QAAQ,CAAEO,SAAS,IAAMA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC;IAC9D,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,SAAS,CAAC,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;IACnC,IAAIV,KAAK,KAAK,CAAC,EAAE,OAAO,CAAC;;IAEzB;IACAG,SAAS,CAAC,CAAC;;IAEX;IACAQ,UAAU,CAAC,MAAM;MACfP,IAAI,CAAC,CAAC;IACR,CAAC,EAAEC,aAAa,CAAC;;IAEjB;IACAM,UAAU,CAAC,MAAM;MACfT,QAAQ,CAAC,UAAU,CAAC;IACtB,CAAC,EAAEG,aAAa,CAAC;EACnB,CAAC;EAED,oBACER,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAGgB,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAEZ;IAAK;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3CrB,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAQsB,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEV,sBAAuB;QAACW,QAAQ,EAAErB,KAAK,KAAK,CAAE;QAAAY,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,UAAU;EAAA,QAEGL,WAAW,EACEC,QAAQ;AAAA;AAAA4B,EAAA,GAHlCxB,UAAU;AA4ChB,eAAeA,UAAU;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}