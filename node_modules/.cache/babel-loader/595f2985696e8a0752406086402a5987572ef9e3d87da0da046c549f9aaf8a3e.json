{"ast":null,"code":"var _jsxFileName = \"/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/SliderPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderPage = () => {\n  _s();\n  // Initialize necessary state variables\n  const navigate = useNavigate();\n  const [valence, setValence] = useState(0); // Initial value for valence slider\n  const [arousal, setArousal] = useState(0); // Initial value for arousal slider\n  const [clickCount, setClickCount] = useState(() => {\n    // Retrieve click count from local storage or default to 0\n    const storedClickCount = localStorage.getItem('clickCount');\n    return storedClickCount ? parseInt(storedClickCount, 10) : 0;\n  });\n  const [valenceModified, setValenceModified] = useState(false); // Track if valence slider is modified\n  const [arousalModified, setArousalModified] = useState(false); // Track if arousal slider is modified\n\n  // Handler for valence slider change\n  const handleValenceChange = e => {\n    setValence(Number(e.target.value));\n    setValenceModified(true); // Set valenceModified to true when valence slider is modified\n  };\n\n  // Handler for arousal slider change\n  const handleArousalChange = e => {\n    setArousal(Number(e.target.value));\n    setArousalModified(true); // Set arousalModified to true when arousal slider is modified\n  };\n\n  // Handler for next button click\n  const handleNextButtonClick = () => {\n    // Check if both valence and arousal sliders are modified\n    if (valenceModified && arousalModified) {\n      // Increment click count\n      const updatedClickCount = clickCount + 1;\n      setClickCount(updatedClickCount);\n\n      // Save valence and arousal values to session storage\n      sessionStorage.setItem(`valence${updatedClickCount}`, valence.toString());\n      sessionStorage.setItem(`arousal${updatedClickCount}`, arousal.toString());\n      if (updatedClickCount > 10) {\n        // Create a data object to store values\n        const data = {};\n        for (let i = 1; i <= 10; i++) {\n          data[`valence${i}`] = sessionStorage.getItem(`valence${i}`);\n          data[`arousal${i}`] = sessionStorage.getItem(`arousal${i}`);\n        }\n\n        // Convert data to JSON string\n        const jsonData = JSON.stringify(data);\n\n        // Create a blob with the data\n        const blob = new Blob([jsonData], {\n          type: 'application/json'\n        });\n\n        // Create a link to download the JSON file\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'session_data.json';\n\n        // Trigger the click event of the link to start download\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n\n        // Clear session storage\n        sessionStorage.clear();\n\n        // Reset counter\n        handleResetButtonClick();\n\n        // Redirect to thank you page\n        navigate('/thankyou');\n      } else {\n        // Redirect back to the timer page to restart the process\n        navigate('/experiment');\n      }\n    } else {\n      // Alert user if sliders are not both modified\n      alert('Please modify both sliders before proceeding.');\n    }\n  };\n\n  // Handler for reset button click\n  const handleResetButtonClick = () => {\n    // Clear click count from local storage\n    localStorage.removeItem('clickCount');\n    console.log(\"count reset\");\n    // Reset click count in the state\n    setClickCount(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '25px'\n      },\n      children: \"Arousal is an emotional dimension of musical energy level, while Valence is an emotional dimension of the comfort level of the listener\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '35px'\n      },\n      children: \"Please report the extent of what you feel about the valence and arousal of the audio played previously\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"valenceSlider\",\n        children: \"Valence:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"valenceSlider\",\n        name: \"valenceSlider\",\n        min: \"1\",\n        max: \"10\",\n        value: valence,\n        onChange: handleValenceChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: valence\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"arousalSlider\",\n        children: \"Arousal:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"arousalSlider\",\n        name: \"arousalSlider\",\n        min: \"1\",\n        max: \"10\",\n        value: arousal,\n        onChange: handleArousalChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: arousal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"App-button\",\n      onClick: handleNextButtonClick,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderPage, \"wVb4eYDzQqrU+g7GKQ1BuVtTEFc=\", false, function () {\n  return [useNavigate];\n});\n_c = SliderPage;\nexport default SliderPage;\nvar _c;\n$RefreshReg$(_c, \"SliderPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","SliderPage","_s","navigate","valence","setValence","arousal","setArousal","clickCount","setClickCount","storedClickCount","localStorage","getItem","parseInt","valenceModified","setValenceModified","arousalModified","setArousalModified","handleValenceChange","e","Number","target","value","handleArousalChange","handleNextButtonClick","updatedClickCount","sessionStorage","setItem","toString","data","i","jsonData","JSON","stringify","blob","Blob","type","url","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","removeChild","clear","handleResetButtonClick","alert","removeItem","console","log","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","id","name","min","max","onChange","className","onClick","_c","$RefreshReg$"],"sources":["/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/SliderPage.js"],"sourcesContent":["import React, { useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './App.css';\n\nconst SliderPage = () => {\n  // Initialize necessary state variables\n  const navigate = useNavigate();\n  const [valence, setValence] = useState(0); // Initial value for valence slider\n  const [arousal, setArousal] = useState(0); // Initial value for arousal slider\n  const [clickCount, setClickCount] = useState(() => {\n    // Retrieve click count from local storage or default to 0\n    const storedClickCount = localStorage.getItem('clickCount');\n    return storedClickCount ? parseInt(storedClickCount, 10) : 0;\n  });\n  const [valenceModified, setValenceModified] = useState(false); // Track if valence slider is modified\n  const [arousalModified, setArousalModified] = useState(false); // Track if arousal slider is modified\n\n  // Handler for valence slider change\n  const handleValenceChange = (e) => {\n    setValence(Number(e.target.value));\n    setValenceModified(true); // Set valenceModified to true when valence slider is modified\n  };\n\n  // Handler for arousal slider change\n  const handleArousalChange = (e) => {\n    setArousal(Number(e.target.value));\n    setArousalModified(true); // Set arousalModified to true when arousal slider is modified\n  };\n\n  // Handler for next button click\n  const handleNextButtonClick = () => {\n    // Check if both valence and arousal sliders are modified\n    if (valenceModified && arousalModified) {\n      // Increment click count\n      const updatedClickCount = clickCount + 1;\n      setClickCount(updatedClickCount);\n\n      // Save valence and arousal values to session storage\n      sessionStorage.setItem(`valence${updatedClickCount}`, valence.toString());\n      sessionStorage.setItem(`arousal${updatedClickCount}`, arousal.toString());\n\n      if (updatedClickCount > 10) {\n        // Create a data object to store values\n        const data = {};\n        for (let i = 1; i <= 10; i++) {\n          data[`valence${i}`] = sessionStorage.getItem(`valence${i}`);\n          data[`arousal${i}`] = sessionStorage.getItem(`arousal${i}`);\n        }\n\n        // Convert data to JSON string\n        const jsonData = JSON.stringify(data);\n\n        // Create a blob with the data\n        const blob = new Blob([jsonData], { type: 'application/json' });\n\n        // Create a link to download the JSON file\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = 'session_data.json';\n\n        // Trigger the click event of the link to start download\n        document.body.appendChild(a);\n        a.click();\n        document.body.removeChild(a);\n\n        // Clear session storage\n        sessionStorage.clear();\n\n        // Reset counter\n        handleResetButtonClick();\n\n        // Redirect to thank you page\n        navigate('/thankyou');\n      } else {\n        // Redirect back to the timer page to restart the process\n        navigate('/experiment');\n      }\n    } else {\n      // Alert user if sliders are not both modified\n      alert('Please modify both sliders before proceeding.');\n    }\n  };\n\n\n  // Handler for reset button click\n  const handleResetButtonClick = () => {\n    // Clear click count from local storage\n    localStorage.removeItem('clickCount');\n    console.log(\"count reset\");\n    // Reset click count in the state\n    setClickCount(0);\n  };\n\n  return (\n    <div>\n      {/* Header and instructions */}\n      <p style={{ fontSize: '25px' }}>Arousal is an emotional dimension of musical energy level, while Valence is an emotional dimension of the comfort level of the listener</p>\n      <p style={{ fontSize: '35px' }}>Please report the extent of what you feel about the valence and arousal of the audio played previously</p>\n\n      {/* Valence slider */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"valenceSlider\">Valence:</label>\n        <input\n          type=\"range\"\n          id=\"valenceSlider\"\n          name=\"valenceSlider\"\n          min=\"1\"\n          max=\"10\"\n          value={valence}\n          onChange={handleValenceChange}\n        />\n        <span>{valence}</span>\n      </div>\n\n      {/* Arousal slider */}\n      <div style={{ marginBottom: '20px' }}>\n        <label htmlFor=\"arousalSlider\">Arousal:</label>\n        <input\n          type=\"range\"\n          id=\"arousalSlider\"\n          name=\"arousalSlider\"\n          min=\"1\"\n          max=\"10\"\n          value={arousal}\n          onChange={handleArousalChange}\n        />\n        <span>{arousal}</span>\n      </div>\n\n      {/* Next button */}\n      <button className=\"App-button\" onClick={handleNextButtonClick} >\n        Next\n      </button>\n\n\n    </div>\n  );\n};\n\nexport default SliderPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}