{"ast":null,"code":"var _jsxFileName = \"/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/Experiment.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importing hook for navigation\nimport useSound from 'use-sound'; // Importing hook for playing audio\nimport mySound from './audios/89.mp3'; // Importing audio file\nimport './App.css'; // Importing CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Experiment = () => {\n  _s();\n  const [timer, setTimer] = useState(3); // State variable to store timer value, initialized to 3 seconds\n  const navigate = useNavigate(); // Hook for navigation\n  const [playSound, {\n    stop\n  }] = useSound(mySound); // Hook for playing audio, with a reference to stop the sound\n\n  const [clickCount, setClickCount] = useState(() => {\n    // Retrieve click count from local storage or default to 0\n    const storedClickCount = localStorage.getItem('clickCount');\n    return storedClickCount ? parseInt(storedClickCount, 10) : 1;\n  });\n\n  // Countdown logic\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      // Decrease timer by 1 second every second, but not below 0\n      setTimer(prevTimer => prevTimer > 0 ? prevTimer - 1 : 0);\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, []);\n\n  // Handler for start button click\n  const handleStartButtonClick = () => {\n    // Play audio file when the button is clicked\n    playSound();\n    console.log(clickCount);\n\n    // Stop audio after 10 seconds and navigate to '/sliders'\n    setTimeout(() => {\n      stop(); // Stop the audio\n      navigate('/sliders'); // Navigate to '/sliders' route\n    }, 10000); // 10 seconds delay\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        fontSize: '45px'\n      },\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"App-button\",\n        onClick: handleStartButtonClick,\n        disabled: timer !== 0,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Experiment, \"dM9IN5fSe7cTqy3w5/7upNxb25s=\", false, function () {\n  return [useNavigate, useSound];\n});\n_c = Experiment;\nexport default Experiment;\nvar _c;\n$RefreshReg$(_c, \"Experiment\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useSound","mySound","jsxDEV","_jsxDEV","Experiment","_s","timer","setTimer","navigate","playSound","stop","clickCount","setClickCount","storedClickCount","localStorage","getItem","parseInt","countdown","setInterval","prevTimer","clearInterval","handleStartButtonClick","console","log","setTimeout","children","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/saadshakeel/Documents/University/Semester 4/BSP/BSP_S4/src/Experiment.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importing hook for navigation\nimport useSound from 'use-sound'; // Importing hook for playing audio\nimport mySound from './audios/89.mp3'; // Importing audio file\nimport './App.css'; // Importing CSS file\n\nconst Experiment = () => {\n  const [timer, setTimer] = useState(3); // State variable to store timer value, initialized to 3 seconds\n  const navigate = useNavigate(); // Hook for navigation\n  const [playSound, { stop }] = useSound(mySound); // Hook for playing audio, with a reference to stop the sound\n  \n  const [clickCount, setClickCount] = useState(() => {\n\t\t// Retrieve click count from local storage or default to 0\n\t\tconst storedClickCount = localStorage.getItem('clickCount');\n\t\treturn storedClickCount ? parseInt(storedClickCount, 10) : 1;\n\t});\n\n  // Countdown logic\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      // Decrease timer by 1 second every second, but not below 0\n      setTimer((prevTimer) => (prevTimer > 0 ? prevTimer - 1 : 0));\n    }, 1000); \n\n    return () => clearInterval(countdown); \n  }, []); \n\n  \n\n  // Handler for start button click\n  const handleStartButtonClick = () => {\n    // Play audio file when the button is clicked\n    playSound();\n\n    console.log(clickCount);\n\n    // Stop audio after 10 seconds and navigate to '/sliders'\n    setTimeout(() => {\n      stop(); // Stop the audio\n      navigate('/sliders'); // Navigate to '/sliders' route\n    }, 10000); // 10 seconds delay\n  };\n\n  return (\n    <div>\n      {/* Display timer value */}\n      <p style={{ fontSize: '45px' }}>{timer}</p>\n      <div>\n        {/* Start button */}\n        <button className=\"App-button\" onClick={handleStartButtonClick} disabled={timer !== 0}>\n          Start\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Experiment;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,QAAQ,MAAM,WAAW,CAAC,CAAC;AAClC,OAAOC,OAAO,MAAM,iBAAiB,CAAC,CAAC;AACvC,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACvC,MAAMW,QAAQ,GAAGT,WAAW,CAAC,CAAC,CAAC,CAAC;EAChC,MAAM,CAACU,SAAS,EAAE;IAAEC;EAAK,CAAC,CAAC,GAAGV,QAAQ,CAACC,OAAO,CAAC,CAAC,CAAC;;EAEjD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,MAAM;IACnD;IACA,MAAMgB,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC3D,OAAOF,gBAAgB,GAAGG,QAAQ,CAACH,gBAAgB,EAAE,EAAE,CAAC,GAAG,CAAC;EAC7D,CAAC,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACd,MAAMmB,SAAS,GAAGC,WAAW,CAAC,MAAM;MAClC;MACAX,QAAQ,CAAEY,SAAS,IAAMA,SAAS,GAAG,CAAC,GAAGA,SAAS,GAAG,CAAC,GAAG,CAAE,CAAC;IAC9D,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMC,aAAa,CAACH,SAAS,CAAC;EACvC,CAAC,EAAE,EAAE,CAAC;;EAIN;EACA,MAAMI,sBAAsB,GAAGA,CAAA,KAAM;IACnC;IACAZ,SAAS,CAAC,CAAC;IAEXa,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC;;IAEvB;IACAa,UAAU,CAAC,MAAM;MACfd,IAAI,CAAC,CAAC,CAAC,CAAC;MACRF,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IACxB,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;EACb,CAAC;EAED,oBACEL,OAAA;IAAAsB,QAAA,gBAEEtB,OAAA;MAAGuB,KAAK,EAAE;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAAF,QAAA,EAAEnB;IAAK;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3C5B,OAAA;MAAAsB,QAAA,eAEEtB,OAAA;QAAQ6B,SAAS,EAAC,YAAY;QAACC,OAAO,EAAEZ,sBAAuB;QAACa,QAAQ,EAAE5B,KAAK,KAAK,CAAE;QAAAmB,QAAA,EAAC;MAEvF;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAjDID,UAAU;EAAA,QAEGL,WAAW,EACEC,QAAQ;AAAA;AAAAmC,EAAA,GAHlC/B,UAAU;AAmDhB,eAAeA,UAAU;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}